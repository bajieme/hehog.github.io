(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{510:function(v,_,e){"use strict";e.r(_);var a=e(3),t=Object(a.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"问题思考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题思考"}},[v._v("#")]),v._v(" "),e("strong",[v._v("问题思考")])]),v._v(" "),e("p",[v._v("数据库索引的数据结构有很多种，比如："),e("code",[v._v("哈希索引")]),v._v("、"),e("code",[v._v("平衡二叉树索引")]),v._v("、"),e("code",[v._v("B树索引")]),v._v("、"),e("code",[v._v("B+树索引")]),v._v("等等。")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("算法动态演示网址"),e("OutboundLink")],1),v._v("、"),e("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/AVLtree.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("平衡二叉树"),e("OutboundLink")],1),v._v("、"),e("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/BTree.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("B树"),e("OutboundLink")],1),v._v("、"),e("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("B+树"),e("OutboundLink")],1)]),v._v(" "),e("h2",{attrs:{id:"哈希索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哈希索引"}},[v._v("#")]),v._v(" 哈希索引")]),v._v(" "),e("p",[v._v("hash大家应该非常的熟悉，就是我们老生常谈的HashMap里用到的技术。Hash索引其"),e("code",[v._v("检索效率")]),v._v("非常"),e("code",[v._v("高")]),v._v("，索引的检索可以"),e("code",[v._v("一次定位")]),v._v("。")]),v._v(" "),e("p",[v._v("可能很多人又有疑问了，既然Hash索引的效率这么高，为什么都用Hash索引而还要使用B-Tree索引呢?")]),v._v(" "),e("p",[v._v("任何事物都是有"),e("code",[v._v("两面性")]),v._v("的，Hash索引也一样，虽然Hash索引效率高，但是Hash索引本身由于其特殊性也带来了很多"),e("code",[v._v("限制")]),v._v("和"),e("code",[v._v("弊端")]),v._v("，主要有以下这些：")]),v._v(" "),e("h3",{attrs:{id:"原因一："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因一："}},[v._v("#")]),v._v(" "),e("strong",[v._v("原因一：")])]),v._v(" "),e("p",[e("code",[v._v("Hash索引不能使用范围查询")])]),v._v(" "),e("p",[v._v('Hash索引仅仅能满足"'),e("code",[v._v("=")]),v._v('","'),e("code",[v._v("IN")]),v._v('"和"'),e("code",[v._v("<=>")]),v._v('"查询(注意<>和＜＝＞是不同的操作），不能使用'),e("code",[v._v("范围查询")]),v._v("，例如WHERE price > 100。")]),v._v(" "),e("p",[v._v("由于Hash索引比较的是进行Hash运算之后的"),e("code",[v._v("Hash值")]),v._v("，所以它只能用于等值的过滤，不能用于基于"),e("code",[v._v("范围的过滤")]),v._v("。")]),v._v(" "),e("h3",{attrs:{id:"原因二："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因二："}},[v._v("#")]),v._v(" "),e("strong",[v._v("原因二：")])]),v._v(" "),e("p",[e("code",[v._v("Hash索引不能利用部分索引键查询")]),v._v("。")]),v._v(" "),e("p",[v._v("对于"),e("code",[v._v("复合索引")]),v._v("，Hash索引在计算"),e("code",[v._v("Hash值")]),v._v("的时候，是组合索引键"),e("code",[v._v("合并后")]),v._v("再"),e("code",[v._v("一起计算")]),v._v("Hash值，而不是"),e("code",[v._v("单独计算")]),v._v("Hash值。")]),v._v(" "),e("p",[v._v("所以通过复合索引的前面一个或几个索引键进行查询的时候，Hash索引也无法被利用。")]),v._v(" "),e("h3",{attrs:{id:"原因三："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因三："}},[v._v("#")]),v._v(" "),e("strong",[v._v("原因三：")])]),v._v(" "),e("p",[e("code",[v._v("Hash索引在任何时候都不能避免表扫描")]),v._v("。")]),v._v(" "),e("p",[v._v("Hash索引是将索引键通过Hash运算之后，将 Hash运算结果的Hash值和所对应的行指针信息存放于一个Hash表中。")]),v._v(" "),e("p",[v._v("由于"),e("code",[v._v("不同索引键")]),v._v("存在"),e("code",[v._v("相同Hash值")]),v._v("，所以无法从Hash索引中直接完成查询，还是要通过访问表中的实际数据进行相应的比较，并得到相应的结果。")]),v._v(" "),e("h2",{attrs:{id:"平衡二叉树索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树索引"}},[v._v("#")]),v._v(" 平衡二叉树索引")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://mddocimg.oss-cn-hangzhou.aliyuncs.com/md/2020/datastructure/20200908133845.png",alt:"image-20200908133845"}})]),v._v(" "),e("p",[v._v("又称 "),e("code",[v._v("AVL")]),v._v("树。它除了具备二叉查找树的基本特征之外，还具有一个非常重要的特点：它的"),e("code",[v._v("左子树")]),v._v("和"),e("code",[v._v("右子树")]),v._v("都是"),e("code",[v._v("平衡二叉树")]),v._v("。")]),v._v(" "),e("p",[v._v("且左子树和右子树的"),e("code",[v._v("深度之差")]),v._v("的绝对值（平衡因子 ）不超过1。也就是说AVL树每个节点的平衡因子只可能是-1、0和1（左子树高度减去右子树高度）。")]),v._v(" "),e("h3",{attrs:{id:"被淘汰的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#被淘汰的原因"}},[v._v("#")]),v._v(" "),e("strong",[v._v("被淘汰的原因")])]),v._v(" "),e("ul",[e("li",[v._v("树的高度过高，高度越高，查找速度越慢")]),v._v(" "),e("li",[v._v("他支持范围查找，但是他需要在进行回旋查找")])]),v._v(" "),e("p",[v._v("比如我要找到"),e("code",[v._v("大于5")]),v._v("的数据")]),v._v(" "),e("p",[v._v("第一步我先定位到5，然后在树上按照二叉树规则去"),e("code",[v._v("回旋")]),v._v("查找大于5其他数据6、7、8、9、10。。。")]),v._v(" "),e("p",[v._v("如果大于5的数据很多，那速度是很慢的。")]),v._v(" "),e("h2",{attrs:{id:"b树索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b树索引"}},[v._v("#")]),v._v(" B树索引")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://mddocimg.oss-cn-hangzhou.aliyuncs.com/md/2020/datastructure/20200908135651.png",alt:"image-20200908135650983"}})]),v._v(" "),e("p",[v._v("大家可以看到"),e("code",[v._v("B树")]),v._v("和"),e("code",[v._v("二叉树")]),v._v("最大的区别在于：它一个节点可以存储两个值，这就意味着它的"),e("code",[v._v("树高度")]),v._v("，比二叉树的高度"),e("code",[v._v("更低")]),v._v("，它的"),e("code",[v._v("查询")]),v._v("速度就"),e("code",[v._v("更快")]),v._v("。这是他的优点")]),v._v(" "),e("p",[v._v("那为什么最终还是不用它呢，还是因为他在"),e("code",[v._v("范围查找")]),v._v("的时候，存在"),e("code",[v._v("回旋")]),v._v("查询的问题。同样order by排序的时候效率也很低，因为要把树上的数据手动排序一遍。")]),v._v(" "),e("h2",{attrs:{id:"b-树索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b-树索引"}},[v._v("#")]),v._v(" B+树索引")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://mddocimg.oss-cn-hangzhou.aliyuncs.com/md/2020/datastructure/20200908141610.png",alt:"image-20200908141610001"}})]),v._v(" "),e("p",[v._v("它是B数的升级版，"),e("code",[v._v("B+")]),v._v("树相比"),e("code",[v._v("B")]),v._v("树，新增"),e("code",[v._v("叶子节点")]),v._v("与"),e("code",[v._v("非叶子节点")]),v._v("关系。")]),v._v(" "),e("p",[e("code",[v._v("叶子节点")]),v._v("中包含了"),e("code",[v._v("key")]),v._v("和"),e("code",[v._v("value")]),v._v("，key存储的是1-10这些数字，value存储的是数据存储地址，"),e("code",[v._v("非叶子节点")]),v._v("中只是包含了"),e("code",[v._v("key")]),v._v("，不包含value。")]),v._v(" "),e("p",[v._v("所有相邻的叶子节点"),e("code",[v._v("包含")]),v._v("非叶子节点，使用"),e("code",[v._v("链表")]),v._v("进行结合，有一定"),e("code",[v._v("顺序排序")]),v._v("，从而"),e("code",[v._v("范围查询")]),v._v("效率非常高。")]),v._v(" "),e("p",[e("strong",[v._v("比如我们要查找"),e("code",[v._v("大于5")]),v._v("的数据：")])]),v._v(" "),e("ul",[e("li",[v._v("首先我们定位到5的位置")]),v._v(" "),e("li",[v._v("然后直接将5后面的数据全部拿出来即可，因为这是有序链表，"),e("code",[v._v("已经排好序了")])])]),v._v(" "),e("p",[v._v("我们在"),e("code",[v._v("order by")]),v._v("排序的时候为什么要"),e("code",[v._v("使用索引进行排序")]),v._v("，原因就在这。")])])}),[],!1,null,null,null);_.default=t.exports}}]);